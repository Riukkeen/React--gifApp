{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","name","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,UAAU,OAAOC,SAXN,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAMlB,SACI,uBAAOC,UAAU,eACbO,KAAK,OACLC,KAAK,SACLC,YAAY,cACZC,MAAOZ,EACPa,SArBc,SAACT,GACvBH,EAAcG,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKhB,UAAU,wCAAf,UACI,mBAAGA,UAAU,aAAb,SAA4B0B,IAC5B,qBAAK1B,UAAU,WAAW8B,IAAKd,EAAKe,IAAKL,QCHxCM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0BjB,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAfAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAK,SAAAC,GACFH,EAAS,CAELd,KAAMiB,EACNL,SAAS,SAKtB,CAACnB,IAGGoB,EDtB0BK,CAAazB,GAAjCa,EAAb,EAAQN,KAAaY,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAMnB,EAAN,OAECmB,GAAW,2CAEZ,qBAAKjC,UAAU,WAAf,SAGQ2B,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEmBtBe,EAjCM,WAIjB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAI5B,6BAEQ6C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACAd,UAAU,YAENc,SAAUA,GADLA,YCtBjC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5bb7b97d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSumbit}>\r\n            <input className=\"form__search\"\r\n                type=\"text\"\r\n                name=\"search\"\r\n                placeholder=\"Search GIfs\"\r\n                value={inputValue}\r\n                onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=PXFQQrRz828zPhTWf2rJUnsvahHDUOM2`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"box animate__animated animate__fadeIn\">\r\n            <p className=\"box__title\" >{title}</p>\r\n            <img className=\"box__img\" src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"box-grid\">\r\n\r\n                {\r\n                    images.map((img) =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    /*useEfect lo utilizamos para que se ejecute la funciÃ³n solo en el\r\n      primer renderizado*/\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n\r\n                    data: imgs,\r\n                    loading: false\r\n\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One puch', 'Samurai X', 'Dragon ball']\r\n\r\n    const [categories, setCategories] = useState(['hunterxhunter']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                        className=\"container\"\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}